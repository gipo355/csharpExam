// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ItsWdfs.Csharp.Exam.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240131091126_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Models.Employee.Employee", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<Guid?>("TownId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TownId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("15b2af53-30a7-4d42-8835-93ac9d126c02"),
                            BirthDate = new DateOnly(1, 1, 1),
                            Email = "ok@gipo.dev",
                            Gender = "Male",
                            Name = "John1",
                            Surname = "Doe",
                            TownId = new Guid("6d6015c6-d698-48a2-ad90-f26a5509acb3")
                        },
                        new
                        {
                            Id = new Guid("1183d79a-b4fb-4d95-830f-4d6a20039ac9"),
                            BirthDate = new DateOnly(1, 1, 1),
                            Email = "ok@gipo.dev",
                            Gender = "Male",
                            Name = "John2",
                            Surname = "Doe",
                            TownId = new Guid("51416c54-8090-46ed-846c-9fd049353ce3")
                        },
                        new
                        {
                            Id = new Guid("8d92b651-4d90-45bd-bc9a-c28e3ef32cf2"),
                            BirthDate = new DateOnly(1, 1, 1),
                            Email = "ok@gipo.dev",
                            Gender = "Male",
                            Name = "John3",
                            Surname = "Doe",
                            TownId = new Guid("a74f9d2e-6ce9-4de1-bef2-8acf6e9bcd35")
                        });
                });

            modelBuilder.Entity("Models.Town.Town", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CodiceCatastale")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Province")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Towns");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6d6015c6-d698-48a2-ad90-f26a5509acb3"),
                            CodiceCatastale = "G224",
                            Name = "Padova",
                            Province = "PD"
                        },
                        new
                        {
                            Id = new Guid("51416c54-8090-46ed-846c-9fd049353ce3"),
                            CodiceCatastale = "L840",
                            Name = "Vicenza",
                            Province = "VI"
                        },
                        new
                        {
                            Id = new Guid("a74f9d2e-6ce9-4de1-bef2-8acf6e9bcd35"),
                            CodiceCatastale = "L407",
                            Name = "Treviso",
                            Province = "TV"
                        });
                });

            modelBuilder.Entity("Models.Employee.Employee", b =>
                {
                    b.HasOne("Models.Town.Town", "Town")
                        .WithMany("Employees")
                        .HasForeignKey("TownId");

                    b.Navigation("Town");
                });

            modelBuilder.Entity("Models.Town.Town", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
