// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ItsWdfs.Csharp.Exam.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Models.Employee.Employee", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FiscalCode")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<Guid?>("TownId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TownId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cd46f869-acf3-44b8-a30e-9f3a35e67af8"),
                            BirthDate = new DateTime(2015, 12, 30, 23, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ok@gipo.dev",
                            Gender = "Male",
                            Name = "John1",
                            Surname = "Doe",
                            TownId = new Guid("93a30cd4-a06f-4fec-9219-699f5d710dd2")
                        },
                        new
                        {
                            Id = new Guid("fe68413b-4e15-4a06-9888-076cc7e19b8b"),
                            BirthDate = new DateTime(2015, 12, 30, 23, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ok@gipo.dev",
                            Gender = "Male",
                            Name = "John2",
                            Surname = "Doe",
                            TownId = new Guid("b469698c-85cc-49fb-ac52-de4321eb78f9")
                        },
                        new
                        {
                            Id = new Guid("ed9c4f97-da6d-482e-bf83-31cd2df461b0"),
                            BirthDate = new DateTime(2015, 12, 30, 23, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ok@gipo.dev",
                            Gender = "Male",
                            Name = "John3",
                            Surname = "Doe",
                            TownId = new Guid("c81e07c2-4a95-4ab0-8365-75da1d94a57f")
                        });
                });

            modelBuilder.Entity("Models.Town.Town", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CodiceCatastale")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Province")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Towns");

                    b.HasData(
                        new
                        {
                            Id = new Guid("93a30cd4-a06f-4fec-9219-699f5d710dd2"),
                            CodiceCatastale = "G224",
                            Name = "Padova",
                            Province = "PD"
                        },
                        new
                        {
                            Id = new Guid("b469698c-85cc-49fb-ac52-de4321eb78f9"),
                            CodiceCatastale = "L840",
                            Name = "Vicenza",
                            Province = "VI"
                        },
                        new
                        {
                            Id = new Guid("c81e07c2-4a95-4ab0-8365-75da1d94a57f"),
                            CodiceCatastale = "L407",
                            Name = "Treviso",
                            Province = "TV"
                        });
                });

            modelBuilder.Entity("Models.Employee.Employee", b =>
                {
                    b.HasOne("Models.Town.Town", "Town")
                        .WithMany("Employees")
                        .HasForeignKey("TownId");

                    b.Navigation("Town");
                });

            modelBuilder.Entity("Models.Town.Town", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
